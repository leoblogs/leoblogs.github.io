import{_ as p,r as t,o,c as e,a as n,d as c,e as i,b as s}from"./app-6ldeWLzQ.js";const l={},u=s(`<h1 id="拼图" tabindex="-1"><a class="header-anchor" href="#拼图" aria-hidden="true">#</a> 拼图</h1><p>本文介绍如何将大量图片拼接为指定图片的样式，效果图如下：</p><img src="https://img-blog.csdnimg.cn/20190717102229545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1aWNoZW5nX2NoZW4=,size_16,color_FFFFFF,t_70" alt="img" style="zoom:90%;"><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路：</h2><p>我们都知道图片是由一个一个像素点组成的，想要实现以上效果，只需要使用与指定图片中像素相似的图片替换对应的像素即可，首先找到与像素相似的图片，然后通过遍历指定图片中的每一个像素，分别使用相似图片替换即可。</p><h3 id="图片与像素的相似度计算" tabindex="-1"><a class="header-anchor" href="#图片与像素的相似度计算" aria-hidden="true">#</a> 图片与像素的相似度计算</h3><h4 id="计算图片的平均rgb" tabindex="-1"><a class="header-anchor" href="#计算图片的平均rgb" aria-hidden="true">#</a> 计算图片的平均RGB</h4><p>遍历给定图片的每个像素，将像素的RGB值进行累加，最后计算平均值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>getdata<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
RGB <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>
    a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    RGB <span class="token operator">=</span> np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span>RGB<span class="token punctuation">)</span>
RGB <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
RGB <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token operator">//</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> b<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过该方式计算出图片的RGB（左），与原图（中）的对比效果如下（右：另一种计算方式）：</p><p><img src="https://img-blog.csdnimg.cn/20190717100935923.jpg" alt="img"></p><h4 id="相似度计算" tabindex="-1"><a class="header-anchor" href="#相似度计算" aria-hidden="true">#</a> 相似度计算</h4><p>相似度通过图片的平均RGB与像素RGB的曼哈顿距离表示，距离越小，越相似。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 计算相似性，colorlist备选图片对应的RGB pixel指定图片的像素值RGB similer相似度阈值，小于该值判定为相似</span>
<span class="token keyword">def</span> <span class="token function">findSimilerImage</span><span class="token punctuation">(</span>colorlist<span class="token punctuation">,</span>pixel<span class="token punctuation">,</span>similer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>colorlist<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#计算 RGB间的曼哈顿距离</span>
        temp <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>colorlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>pixel<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>colorlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pixel<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>colorlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>pixel<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> similer<span class="token punctuation">)</span><span class="token punctuation">:</span>
            index<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#如果没有相似图片 增大similer</span>
        index <span class="token operator">=</span> findSimilerImage<span class="token punctuation">(</span>colorlist<span class="token punctuation">,</span>pixel<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>similer<span class="token punctuation">)</span>
    <span class="token keyword">return</span> index
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="填充指定图片的像素" tabindex="-1"><a class="header-anchor" href="#填充指定图片的像素" aria-hidden="true">#</a> 填充指定图片的像素</h4><p>给定一张图片如下：</p><img src="https://img-blog.csdnimg.cn/20190717095540564.jpg" alt="img" style="zoom:400%;"><p>并指定填充该图片的图片集，一个包含大量图片的文件夹。填充效果如下：</p><img src="https://img-blog.csdnimg.cn/20190717102229545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1aWNoZW5nX2NoZW4=,size_16,color_FFFFFF,t_70" alt="img" style="zoom:45%;"><h4 id="细节展示" tabindex="-1"><a class="header-anchor" href="#细节展示" aria-hidden="true">#</a> 细节展示</h4><img src="https://img-blog.csdnimg.cn/20190717102157932.png" alt="img" style="zoom:90%;"><img src="https://img-blog.csdnimg.cn/20190717102134477.png" alt="img" style="zoom:97%;"><h2 id="全部代码" tabindex="-1"><a class="header-anchor" href="#全部代码" aria-hidden="true">#</a> 全部代码</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
Created on Tue Jul 16 12:18:04 2019
@author: icheng
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> argparse
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> random
<span class="token keyword">import</span> time
<span class="token keyword">import</span> os

<span class="token keyword">def</span> <span class="token function">setSize</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>savepath<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span> 
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    重新设置图片大小  最终输出为保存图片为x*y像素
    path :资源图片路径   savepath:输出图片保存路径
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    width<span class="token punctuation">,</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>size
    <span class="token keyword">if</span><span class="token punctuation">(</span>width <span class="token operator">&gt;</span> height<span class="token punctuation">)</span><span class="token punctuation">:</span>
        left <span class="token operator">=</span> <span class="token punctuation">(</span>width <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>
        box<span class="token operator">=</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>left <span class="token operator">+</span> height<span class="token punctuation">,</span>height<span class="token punctuation">)</span>
        image <span class="token operator">=</span> image<span class="token punctuation">.</span>crop<span class="token punctuation">(</span>box<span class="token punctuation">)</span>
    <span class="token keyword">elif</span><span class="token punctuation">(</span>width <span class="token operator">&lt;</span> height<span class="token punctuation">)</span><span class="token punctuation">:</span>
        top <span class="token operator">=</span> <span class="token punctuation">(</span>height <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>
        box<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>top<span class="token punctuation">,</span>width<span class="token punctuation">,</span>top <span class="token operator">+</span> width<span class="token punctuation">)</span>
        image <span class="token operator">=</span> image<span class="token punctuation">.</span>crop<span class="token punctuation">(</span>box<span class="token punctuation">)</span>
    image <span class="token operator">=</span> image<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span>Image<span class="token punctuation">.</span>ANTIALIAS<span class="token punctuation">)</span>  <span class="token comment">#此处可更改输出图片大小</span>
    image <span class="token operator">=</span> image<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">&#39;RGB&#39;</span><span class="token punctuation">)</span>
    image<span class="token punctuation">.</span>save<span class="token punctuation">(</span>savepath<span class="token punctuation">)</span>


 
<span class="token keyword">def</span> <span class="token function">getColor</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span> 
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    获取图片的大致色彩 保存为RGB
    &quot;&quot;&quot;</span>   
    image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    data <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>getdata<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        b <span class="token operator">=</span> np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
    b <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    b <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token operator">//</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> b<span class="token punctuation">]</span>
    b <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    c <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        temp <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
        temp <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
        count <span class="token operator">+=</span> <span class="token number">1</span>
        c <span class="token operator">=</span> np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span>c<span class="token punctuation">)</span>
    c <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    c <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token operator">//</span> count <span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">]</span>
    c <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token keyword">return</span> c           <span class="token comment">#此处可选择  b  OR  c</span>


<span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    path <span class="token operator">=</span> <span class="token string">&#39;colorlist.txt&#39;</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
<span class="token keyword">def</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    path <span class="token operator">=</span> <span class="token string">&#39;colorlist.txt&#39;</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>
        temp <span class="token operator">=</span> line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
        temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> temp<span class="token punctuation">]</span>
        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> data

<span class="token keyword">def</span> <span class="token function">imageToColor</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment">#将批量图片转化为颜色 </span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
        path <span class="token operator">=</span> <span class="token string">&#39;source\\image_{}.jpg&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        color <span class="token operator">=</span> getColor<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>color<span class="token punctuation">)</span>
    write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

 <span class="token comment">#查找与 像素 最相近的点</span>
<span class="token keyword">def</span> <span class="token function">findSimilerImage</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>pixel<span class="token punctuation">,</span>similer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        temp <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>pixel<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pixel<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>pixel<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> similer<span class="token punctuation">)</span><span class="token punctuation">:</span>
            index<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        index <span class="token operator">=</span> findSimilerImage<span class="token punctuation">(</span>data<span class="token punctuation">,</span>pixel<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>similer<span class="token punctuation">)</span>
    <span class="token keyword">return</span> index
    
<span class="token keyword">def</span> <span class="token function">dealImage</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>edge<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    处理图片  输出 像素填充图
    &quot;&quot;&quot;</span>
    data <span class="token operator">=</span> read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    inImage <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    x <span class="token operator">=</span> inImage<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    y <span class="token operator">=</span> inImage<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    outImage <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">&#39;RGB&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">*</span>edge<span class="token punctuation">,</span>y<span class="token operator">*</span>edge<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>
            pixel <span class="token operator">=</span> inImage<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
            indexlist <span class="token operator">=</span> findSimilerImage<span class="token punctuation">(</span>data<span class="token punctuation">,</span>pixel<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>
            index <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>indexlist<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            sourcePath <span class="token operator">=</span> <span class="token string">&#39;source\\image_{}.jpg&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>indexlist<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
            sourceImage <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>sourcePath<span class="token punctuation">)</span>
            outImage<span class="token punctuation">.</span>paste<span class="token punctuation">(</span>sourceImage<span class="token punctuation">,</span><span class="token punctuation">(</span>i<span class="token operator">*</span>edge<span class="token punctuation">,</span>j<span class="token operator">*</span>edge<span class="token punctuation">)</span><span class="token punctuation">)</span>
    outImage<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;ouput.jpg&#39;</span><span class="token punctuation">)</span>
     
        
        
    
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--path&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;imgs path must&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--resize&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;imgs resize&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--img&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;source img must&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--size&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;img size&#39;</span><span class="token punctuation">)</span>
    opt <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        path<span class="token operator">=</span>opt<span class="token punctuation">.</span>path
        resize<span class="token operator">=</span>opt<span class="token punctuation">.</span>resize
        imgs <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
        i<span class="token operator">=</span><span class="token number">0</span>
        <span class="token keyword">for</span> img <span class="token keyword">in</span> imgs<span class="token punctuation">:</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;.jpg&quot;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> img<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                imgpath <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>img<span class="token punctuation">)</span>
                savepath <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;image_{}.jpg&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
                setSize<span class="token punctuation">(</span>imgpath<span class="token punctuation">,</span>savepath<span class="token punctuation">,</span>resize<span class="token punctuation">,</span>resize<span class="token punctuation">)</span>   
        
    <span class="token keyword">if</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>img <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        imgs <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>imgs<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Processing...&#39;</span><span class="token punctuation">)</span>
            imageToColor<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>imgs<span class="token punctuation">)</span><span class="token punctuation">)</span>
            imgpath <span class="token operator">=</span> opt<span class="token punctuation">.</span>img
            dealImage<span class="token punctuation">(</span>imgpath<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>imgs<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;successfully&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;please using: python pixelImage.py --path [imgs_path] --resize [size]&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Exit after 3 seconds&#39;</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python pixelImage.py <span class="token parameter variable">--path</span> <span class="token punctuation">[</span>图片集路径，一个文件夹存放生活照<span class="token punctuation">]</span> <span class="token parameter variable">--img</span> <span class="token punctuation">[</span>指定的图片，想生成的样子<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,25),k={href:"https://github.com/chen-huicheng/Pistachio/tree/main/pixelImage",target:"_blank",rel:"noopener noreferrer"},r=s('<h2 id="可执行文件exe" tabindex="-1"><a class="header-anchor" href="#可执行文件exe" aria-hidden="true">#</a> 可执行文件exe</h2><p><img src="https://img-blog.csdnimg.cn/20190731175626272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1aWNoZW5nX2NoZW4=,size_16,color_FFFFFF,t_70" alt="img"></p><p>1、点击<strong>选择文件夹</strong>选择图片所在文件夹（这里的图片由于拼接，即最终像素填充图中的小图片）</p><p>2、点击<strong>选择图片</strong> 选择带拼接图片</p><p>3、点击执行即可</p><p>可运行文件下载</p><p>链接: https://pan.baidu.com/s/1UNELXOg2lciSWqO75MTfVQ 提取码: x2ky 复制这段内容后打开百度网盘手机App，操作更方便哦</p>',7);function d(m,v){const a=t("ExternalLinkIcon");return o(),e("div",null,[u,n("p",null,[n("a",k,[c("Github"),i(a)])]),r])}const g=p(l,[["render",d],["__file","pix_image.html.vue"]]);export{g as default};
